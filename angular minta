#service

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';

@Injectable({
  providedIn: 'root'
})
export class ApiService {

  private baseUrl = 'https://api.frankfurter.app';
  constructor(private http: HttpClient) { }

  getCurrencies() {
    return this.http.get(this.baseUrl + '/currencies');
  }

  exchange(from: any, to: any, amount: any) {
    return this.http.get(this.baseUrl + '/latest' + '?from=' + from + '&to=' + to + '&amount=' + amount);
  }

  latestEuroRates() {
    return this.http.get(this.baseUrl + '/latest');
  }


}



#ts:
import { Component, OnInit } from '@angular/core';
import { FormControl, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';
import { ApiService } from '../../services/api.service';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-penz',
  imports: [FormsModule, CommonModule, ReactiveFormsModule],
  templateUrl: './penz.component.html',
  styleUrl: './penz.component.css'
})
export class PenzComponent implements OnInit {
currencies: any;
changed: any;
result: any;
latest: any;

form = new FormGroup({
  fromSelect: new FormControl(''),
  fromValue: new FormControl(''),
  toSelect: new FormControl(''),
});

constructor(private apiService: ApiService) { }

ngOnInit(): void {
  this.apiService.getCurrencies().subscribe((data: any) => {
    this.currencies = data;
    console.log(this.currencies);
  });

  this.apiService.latestEuroRates().subscribe((data: any) => {
    this.latest = data;
    this.latest = this.latest.rates;
    console.log(this.latest);
  });
}

public exchange() {
  let form = this.form.value.fromSelect;
  let to = this.form.value.toSelect;
  let amount = this.form.value.fromValue;

  if(!form || !to || !amount) {
    alert('Please fill in all fields!');
    return;
  }


  this.apiService.exchange(form, to, amount).subscribe((data: any) => {
    this.changed = data;
    console.log(this.changed);
    this.result = this.changed.rates[to];
  });
}

}


#html:
<div class="conatiner pt-5">
    <div class="card p-3 w-50 m-auto">
        <form [formGroup]="form" (ngSubmit)="exchange()">
            <div class="row">
                <div class="form-floating col-6 mb-3">
                    <select class="form-select" id="fromSelect" formControlName="fromSelect">
                        <option selected>Pénznem választó</option>
                        <option *ngFor="let currency of currencies | keyvalue" value="{{currency.key}}">
                            {{currency.value}}</option>
                    </select>
                    <label for="floatingSelect">Miről</label>
                </div>
                <div class="form-floating col-6 mb-3">
                    <select class="form-select" id="toSelect" formControlName="toSelect">
                        <option selected>Pénznem választó</option>
                        <option *ngFor="let currency of currencies | keyvalue" value="{{currency.key}}">
                            {{currency.value}}</option>
                    </select>
                    <label for="floatingSelect">Mire</label>
                </div>
            </div>

            <div class="form-floating mb-3">
                <input type="number" class="form-control" formControlName="fromValue" id="fromValue" placeholder="Átváltandó érték">
                <label for="fromValue">Átváltandó érték</label>
            </div>
            <div class="form-floating mb-3">
                <input type="number" class="form-control" id="resultValue" placeholder="Eredmény" disabled [value]="result">
                <label for="resultValue">Eredmény</label>
            </div>
            <button class="btn btn-primary m-auto d-block">Pénzváltás</button>
        </form>
    </div>
    <div>
        <table class="table table-striped table caption-top w-75 m-auto mt-5" style="text-align: center;">
            <caption style="text-align: center;">Legutóbbi Euro árfolyamok</caption>
            <thead>
                <tr>
                    <th>Pénznem</th>
                    <th>Érték</th>
                </tr>
            </thead>
            <tbody>
                <tr *ngFor="let row of latest | keyvalue">
                    <td>{{row.key}}</td>
                    <td>{{row.value}}</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
